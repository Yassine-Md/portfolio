---
import { getCollection } from 'astro:content';
import Layout from '../../components/Layout.astro';
import { categories } from '../../config/categories.ts';

export async function getStaticPaths() {
  const paths = [];

  for (const category of categories) {
    // On essaie de récupérer les articles mais on ne bloque pas si vide ou erreur
    try {
      await getCollection(category);
      // On pousse toujours la catégorie même si pas d'articles
      paths.push({ params: { category } });
    } catch (error) {
      // En cas d'erreur, on peut décider de quand même créer la page ou non
      paths.push({ params: { category } });
    }
  }

  return paths;
}

const { category } = Astro.params;

let articles = [];
try {
  articles = (await getCollection(category))
    .sort((a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate));
} catch (error) {
  console.error(`Error loading articles for ${category}:`, error);
}
---

<Layout>
  <h1 class="text-3xl font-bold capitalize mb-8">{category}</h1>
  
  <div class="grid gap-6">
    {articles.map((article) => (
      <a href={`/blog/${category}/${article.slug}`} class="block p-6 border rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800 transition">
        <h2 class="text-xl font-semibold">{article.data.title}</h2>
        <p class="text-gray-600 dark:text-gray-400 mt-2">{article.data.description}</p>
        <time class="text-sm text-gray-500">{new Date(article.data.pubDate).toLocaleDateString()}</time>
      </a>
    ))}
  </div>
  
  {articles.length === 0 && (
    <p class="text-gray-500">Aucun article trouvé dans cette catégorie.</p>
  )}
</Layout>
