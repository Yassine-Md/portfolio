---
import Layout from '../../components/Layout.astro';
import { translations } from '../../index_i18n.ts';

export async function getStaticPaths() {
  return [
    { params: { lang: 'fr' } },
    { params: { lang: 'en' } },
    { params: { lang: undefined } }, // pour la racine /
  ];
}

const langParam = Astro.params.lang;
const lang = ['fr', 'en'].includes(langParam) ? langParam : 'fr';
const t = translations[lang];

// Couleurs bien distinctes pour chaque cat√©gorie
function getCategoryColorClass(slug) {
  switch (slug) {
    case 'reseau':
      return 'text-blue-800 dark:text-blue-400';       // Bleu fonc√©
    case 'web':
      return 'text-pink-600 dark:text-pink-400';       // Rose vif
    case 'systeme':
      return 'text-green-800 dark:text-green-400';     // Vert fonc√©
    case 'virtualisation':
      return 'text-yellow-700 dark:text-yellow-300';   // Jaune dor√©
    case 'management':
      return 'text-purple-800 dark:text-purple-400';   // Violet fonc√©
    case 'embarque':
      return 'text-teal-700 dark:text-teal-400';       // Bleu-vert
    case 'programmation':
      return 'text-red-700 dark:text-red-400';          // Rouge vif
    case 'cloud':
      return 'text-cyan-700 dark:text-cyan-400';       // Cyan vif
    case 'securite':
      return 'text-orange-700 dark:text-orange-400';   // Orange vif
    case 'bdd':
      return 'text-indigo-700 dark:text-indigo-400';   // Indigo vif
    case 'materiel':
      return 'text-gray-800 dark:text-gray-500';        // Gris fonc√©
    default:
      return 'text-gray-600 dark:text-gray-400';
  }
}
---

<Layout lang={lang} t={t}>
  <section class="text-center">
    <h1 class="text-4xl font-bold text-indigo-600 dark:text-indigo-400 mb-4">{t.welcomeTitle}</h1>
    <p class="mb-8 text-lg">{t.welcomeDesc}</p>
  </section>
  
  <!-- üîç Zone de recherche -->
  <section class="max-w-3xl mx-auto my-10 px-4">
   <input
  id="searchInput"
  type="text"
  placeholder="Rechercher un sujet..."
  class="w-full p-3 border rounded-xl shadow focus:outline-none focus:ring focus:border-blue-300 bg-white text-black placeholder:text-gray-500"
/>

    <div id="searchResults" class="mt-6 space-y-4"></div>
  </section>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-10">
    {t.categories.map((cat) => (
      <a href={`/blog/${cat.slug}`} class="bg-indigo-50 dark:bg-gray-800 p-6 rounded-xl shadow hover:shadow-lg transition">
        <h2 class={`text-xl font-semibold mb-2 ${getCategoryColorClass(cat.slug)}`}>
          {cat.emoji || ''} {cat.title}
        </h2>
        <p class="text-sm text-gray-600 dark:text-gray-400">{cat.description}</p>
      </a>
    ))}
  </div>

  <!-- Script JS -->
  <script is:client>
    const input = document.getElementById('searchInput');
    const resultsContainer = document.getElementById('searchResults');

    let data = [];

    fetch('/api/search.json')
      .then(res => res.json())
      .then(json => { data = json; });

    function normalize(str) {
      return str
        .toLowerCase()
        .normalize('NFD')
        .replace(/[\u0300-\u036f]/g, '') // remove accents
        .trim();
    }

    input.addEventListener('input', () => {
      const query = normalize(input.value);
      if (!query) {
        resultsContainer.innerHTML = '';
        return;
      }

      const results = data.filter(item => {
        const inTitle = normalize(item.title).includes(query);
        const inDesc = normalize(item.description).includes(query);
        const inTags = item.tags.some(tag => normalize(tag).includes(query));
        return inTitle || inDesc || inTags;
      });

      if (results.length === 0) {
        resultsContainer.innerHTML = '<p class="text-center text-gray-500">Aucun r√©sultat trouv√©.</p>';
        return;
      }

      resultsContainer.innerHTML = results.map(result => `
        <a href="${result.url}" class="block p-4 rounded-xl shadow bg-white dark:bg-gray-800 hover:bg-indigo-50 dark:hover:bg-gray-700 transition">
          <h3 class="text-lg font-semibold mb-1">${result.title}</h3>
	  <p class="text-sm text-gray-600 dark:text-gray-400 mb-1">${result.description}</p>
	  <p class="text-xs text-gray-500 italic">Cat√©gorie : ${result.category}</p>
          <div class="text-xs mt-2">${result.tags.map(tag => `<span class="inline-block bg-indigo-100 dark:bg-indigo-800 text-indigo-700 dark:text-indigo-200 px-2 py-1 rounded mr-1">${tag}</span>`).join('')}</div>
        </a>
      `).join('');
    });
  </script>
</Layout>
